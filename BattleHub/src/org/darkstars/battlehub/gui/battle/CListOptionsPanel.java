/*
 * CBooleanOptionsPanel.java
 *
 * Created on 11 January 2008, 21:25
 */
package org.darkstars.battlehub.gui.battle;

import org.darkstars.battlehub.framework.CEvent;
import org.darkstars.battlehub.battlemodels.IBattleModel;
import org.darkstars.battlehub.framework.IModule;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.SwingUtilities;
import org.darkstars.battlehub.CVectorListModel;
import org.darkstars.battlehub.framework.ICentralClass;

/**
 *
 * @author  tarendai-std
 */
public class CListOptionsPanel extends javax.swing.JPanel implements IModule {

    boolean map;
    List<ListItem> items;
    int optionType;
    String defValue;
    int maxlength;
    String title;
    String description;
    String key;
    IBattleModel battlemodel;
    boolean host;
    String current = null;
    CVectorListModel listModel = new CVectorListModel();

    /** Creates new form CBooleanOptionsPanel
     * @param battlemodel 
     * @param key
     * @param defValue
     * @param items 
     * @param title
     * @param description
     * @param map 
     */
    public CListOptionsPanel(
            IBattleModel battlemodel,
            String key,
            String defValue,
            List<ListItem> items,
            String title,
            String description,
            boolean map) {

        this.items = items;

        this.map = map;

        this.host = battlemodel.AmIHost();
        this.defValue = defValue;

        this.title = new String(title);
        this.key = new String(key);
        this.description = new String(description);
        this.battlemodel = battlemodel;
        battlemodel.PutOption(key, defValue);
        current = defValue;

        for (final ListItem item : items) {
            SwingUtilities.invokeLater(new Runnable() {

                @Override
                public void run() {
                    listModel.addElement(item);
                }
            });
        }

        SwingUtilities.invokeLater(new Runnable() {

            @Override
            public void run() {
                initComponents();
            }
        });
        
        final String v = GetItemName(defValue);

        SwingUtilities.invokeLater(new Runnable() {

            @Override
            public void run() {
                optionsList.setSelectedValue(v, true);
            }
        });

        
    }

    /**
     * 
     * @return
     */
    public DefaultComboBoxModel GetComboModel() {
        DefaultComboBoxModel c = new DefaultComboBoxModel(items.toArray().clone());
        return c;
    }

    public String GetItemName(String key) {
        for (ListItem i : items) {
            if (i.key.equalsIgnoreCase(key)) {
                return i.name;
            }
        }
        return "moo";
    }

    public String GetItemKey(String name) {
        for (ListItem i : items) {
            if (i.name.equalsIgnoreCase(name)) {
                return i.key;
            }
        }
        return "moo";
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        optionsList = new javax.swing.JList();

        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getSize()+5f));
        jLabel1.setText(title);

        jLabel2.setText("<html>"+description);

        jButton2.setText("Reset");
        jButton2.setEnabled(host);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/UI/map.png"))); // NOI18N
        jLabel3.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/images/UI/optionflag.png"))); // NOI18N
        jLabel3.setEnabled(map);

        optionsList.setModel(listModel);
        optionsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        optionsList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                optionsListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(optionsList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        final String v = GetItemName(defValue);

        SwingUtilities.invokeLater(new Runnable() {

            @Override
            public void run() {
                optionsList.setSelectedValue(v, true);
            }
        });

        battlemodel.PutOption(key, defValue);
    }//GEN-LAST:event_jButton2ActionPerformed

private void optionsListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_optionsListValueChanged
    ListItem item = (ListItem) optionsList.getSelectedValue();
    if (!current.equals(item.key)) {
        current = item.key;
        battlemodel.PutOption(key, item.key);
    }
}//GEN-LAST:event_optionsListValueChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList optionsList;
    // End of variables declaration//GEN-END:variables
    @Override
    public void Init(final ICentralClass LM) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void Update() {
    }

    @Override
    public void NewEvent(CEvent e) {
        if (e.IsEvent("SETSCRIPTTAGS")) {
            //
            String[] pairs = e.parameters.split("\t");

            for (int i = 0; i < pairs.length; i++) {

                String[] pair = pairs[i].split("=");

                String k = pair[0];
                k = k.replaceAll("\\\\", "/");
                final String value = pair[1];

                //if (k.equalsIgnoreCase(key)) {
                final String temp = GetItemName(value);
                if (!current.equalsIgnoreCase(temp)) {
                    Runnable doWorkRunnable = new  

                          Runnable() {

                              
                             @Override
                        public void run() {
                            current = temp;
                            optionsList.setSelectedValue(current, true);
                        }
                    };
                    SwingUtilities.invokeLater(doWorkRunnable);
                    break;
                }

            //}

            }
        }
    }

    @Override
    public void NewGUIEvent(CEvent e) {
    }

    @Override
    public void OnRemove() {
        battlemodel = null;
    }

    @Override
    public void OnEvent(CEvent e) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void OnRemove(int channel) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
}
